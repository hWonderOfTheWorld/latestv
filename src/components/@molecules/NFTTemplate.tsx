import { ReactNode, useMemo } from 'react'
import styled, { css } from 'styled-components'

type Props = {
  name: string
  backgroundImage: string | undefined | null
  isNormalised: boolean
}

const MAX_CHAR = 60
const bgProps = { width: '270', height: '270' }

const getSegmentLength = (str: string) => [...new Intl.Segmenter().segment(str)].length

const getEllipsis = (str: string) => {
  const len = str.length
  return `${str.substring(0, MAX_CHAR - 7)}...${str.substring(len - 7, len - 4)}.ip`
}

const getFontSize = (str: string) => {
  const canvas = document.createElement('canvas')
  canvas.width = 270
  canvas.height = 270
  const ctx = canvas.getContext('2d')!
  ctx.font =
    'normal normal bold 20px normal Satoshi, DejaVu Sans, Noto Color Emoji, Apple Color Emoji, sans-serif'
  const fontMetrics = ctx.measureText(str)
  const fontSize = Math.floor(20 * (200 / fontMetrics.width))
  return fontSize < 34 ? fontSize : 32
}

const addSpan = (str: string, inx: number) => (
  <>
    <tspan x="32" dy="-1.2em">
      {str.substring(0, inx)}
    </tspan>
    <tspan x="32" dy="1.2em">
      {str.substring(inx, str.length)}
    </tspan>
  </>
)

const Text = styled.text(
  () => css`
    font-family: Satoshi, 'DejaVu Sans', 'Noto Color Emoji', 'Apple Color Emoji', sans-serif;
    font-style: normal;
    font-variant-numeric: tabular-nums;
    font-weight: bold;
    font-variant-ligatures: none;
    font-feature-settings: 'ss01' on, 'ss03' on;
    line-height: 34px;
  `,
)

const NFTTemplate = ({ name, backgroundImage, isNormalised }: Props) => {
  const Satoshi = new FontFace('Satoshi', 'url(/fonts/sans-serif/Satoshi-Bold.otf)')
  const DejaVuSans = new FontFace('DejaVuSans', 'url(/fonts/sans-serif/DejaVuSans-Bold.ttf)')

  const elementData = useMemo(() => {
    if (!Satoshi.loaded) return {}
    if (!DejaVuSans.loaded) return {}
    const labels = name.split('.')
    const isSubdomain = labels.length > 2

    let subdomainText
    let domain
    let subdomain
    let domainFontSize
    let subdomainFontSize
    if (isSubdomain && !name.includes('...')) {
      subdomain = `${labels.slice(0, labels.length - 2).join('.')}.`
      domain = labels.slice(-2).join('.')
      if (getSegmentLength(subdomain) > MAX_CHAR) {
        subdomain = getEllipsis(subdomain)
      }
      subdomainFontSize = getFontSize(subdomain)
      subdomainText = (
        <text x="32.5" y="200" fontSize={`${subdomainFontSize}px`} fill="white">
          {subdomain}
        </text>
      )
    } else {
      domain = name
    }
    let charSegmentLength = getSegmentLength(domain)
    if (charSegmentLength > MAX_CHAR) {
      domain = getEllipsis(domain)
      domainFontSize = getFontSize(domain)
      charSegmentLength = MAX_CHAR
    } else {
      domainFontSize = getFontSize(domain)
    }
    if (charSegmentLength > 25) {
      domain = addSpan(domain, charSegmentLength / 2)
      domainFontSize *= 2
    }
    return { domainFontSize, subdomainText, isSubdomain, domain }
  }, [name, Satoshi.loaded, DejaVuSans.loaded])
  const { domainFontSize, subdomainText, isSubdomain, domain } = elementData

  let background: ReactNode

  if (backgroundImage) {
    background = (
      <>
        <defs>
          <pattern id="backImg" patternUnits="userSpaceOnUse" x="0" y="0" {...bgProps}>
            <image href={backgroundImage} {...bgProps} />
          </pattern>
        </defs>
        <rect {...bgProps} fill="url(#backImg)" />
        <rect {...bgProps} fill="#000" fillOpacity=".12" />
      </>
    )
  } else if (isNormalised) {
    background = <rect fill="url(#paint0_linear)" {...bgProps} />
  } else {
    background = <rect fill="url(#paint1_linear)" {...bgProps} />
  }

  return (
    <svg viewBox="0 0 270 270" display="block" fill="none" xmlns="http://www.w3.org/2000/svg">
      {background}
      <defs>
        <filter
          id="dropShadow"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
          height="270"
          width="270"
        >
          <feDropShadow
            dx="0"
            dy="1"
            stdDeviation="2"
            floodOpacity="0.225"
            width="200%"
            height="200%"
          />
        </filter>
      </defs>
      
      <g id="Page-1" stroke="none"  strokeWidth="1" fill="none" fillRule="evenodd">
        <g id="ebpto-logo-knockout" transform="translate(20,20)" fill="#FFFFFF">
            <path d="M16.9984445,13 C15.8781302,13 14.9439963,13.4223159 14.196063,14.2705622 C13.4481297,15.1188086 13.0504791,16.3607724 13,18 L21,18 C20.9496213,16.3607724 20.5519505,15.1188086 19.8039972,14.2705622 C19.0560639,13.4223159 18.12193,13 17.0016157,13 L16.9984445,13 Z" id="Path"></path>
            <path d="M34.0034176,19.4405118 L34.0034176,19.8971172 C34.0570315,21.1671449 34.3090807,22.3343409 34.7589245,23.4018708 C35.2089819,24.4694007 36.2838224,25 37.9798147,25 C39.8909033,25 41.0360185,24.3730023 41.4222092,23.1157393 C41.8051958,21.8584762 42,20.4823287 42,18.9839268 L42,18.8681671 C42,17.3954987 41.8017782,16.0482298 41.4021307,14.8295873 C41.0059007,13.6109449 39.8639895,13 37.9798147,13 C36.3107361,13 35.2427309,13.5208982 34.775799,14.5626947 C34.3122847,15.6045115 34.0538275,16.7459945 34,17.99035 L34,19.4373053 L34.0034176,19.4405118 Z" id="Path"></path>
            <path d="M92.2904487,14.7501392 C92.2653798,14.6986651 92.2336927,14.6439624 92.195989,14.5796351 C92.1580847,14.5152874 92.1139634,14.4605847 92.0666332,14.4091106 C91.7922788,14.0037548 91.3761344,13.6659549 90.8147907,13.398919 C90.253447,13.1319036 89.6511908,13 89.0016044,13 C88.352018,13 87.7497618,13.1319036 87.1884181,13.398919 C86.6270745,13.6659549 86.2109301,14.0037548 85.9365756,14.4091106 C85.8860366,14.4605847 85.8419153,14.5184956 85.8042116,14.5796351 C85.7663073,14.6439624 85.7348208,14.7018733 85.7095513,14.7501392 C85.4351968,15.2069691 85.249085,15.7217099 85.1482076,16.2943821 C85.0473302,16.8670338 85,17.7614036 85,18.9806998 C85,20.1999959 85.050539,21.1330071 85.1482076,21.705577 C85.2460767,22.2783514 85.4351968,22.7930922 85.7095513,23.2497995 C85.7348208,23.301294 85.7663073,23.3593275 85.8042116,23.4204262 C85.8419153,23.4847943 85.8860366,23.5426235 85.9365756,23.5908485 C86.2109301,23.9962656 86.6270745,24.3340451 87.1884181,24.6011218 C87.7497618,24.8681986 88.352018,25 89.0016044,25 C89.6511908,25 90.253447,24.8681986 90.8147907,24.6011218 C91.3761344,24.3340451 91.7922788,23.9962656 92.0666332,23.5908485 C92.1171722,23.539354 92.1612936,23.4847943 92.195989,23.4204262 C92.2336927,23.356058 92.2653798,23.301294 92.2904487,23.2497995 C92.5648032,22.7930922 92.750915,22.2783514 92.8517924,21.705577 C92.9496616,21.1330071 93,20.2386168 93,19.0193002 C93,17.8000041 92.9496616,16.8670338 92.8517924,16.2943821 C92.750915,15.7217099 92.5648032,15.2069691 92.2904487,14.7501392 Z" id="Path"></path>
            <path d="M102.003248,0 L74.1290201,0 L74.1290201,9.13918397 L77.0492016,9.13918397 L77.0492016,12.2188937 L74.1290201,12.2188937 L74.1290201,23.8644527 C74.1290201,24.4178449 74.2390516,24.8044149 74.4656869,25.0277617 C74.6891421,25.2511086 75.0523097,25.3643698 75.5524337,25.3643698 L77.0523817,25.3643698 L77.0523817,29.1540684 L74.9590267,29.1540684 C73.562326,29.1540684 72.405617,28.7274865 71.4857195,27.8707237 C70.5656101,27.0175599 70.1021633,25.7977262 70.1021633,24.2177854 L70.1021633,12.2188937 L68.0889468,12.2188937 L68.0889468,9.13918397 L70.1021633,9.13918397 L70.1021633,0 L33.7345195,0 L33.7345195,11.2723264 C34.4977439,10.5623798 35.2944654,9.98910873 36.124472,9.55581583 C36.9544785,9.12252293 37.8811602,8.90586589 38.9079091,8.90586589 C40.1445446,8.90586589 41.2045785,9.14917636 42.0880108,9.63579729 C42.968051,10.1224182 43.7013824,10.7490385 44.2780409,11.5122919 C44.3047538,11.5389665 44.3246824,11.56562 44.3380388,11.5922946 C44.3513952,11.618948 44.3713239,11.6322853 44.3980367,11.6322853 C44.8981607,12.3422319 45.2413997,13.1788194 45.4247856,14.1387239 C45.6081715,15.0986497 45.7014544,16.7651559 45.7014544,19.1316164 C45.7014544,21.4980346 45.6081715,23.2113484 45.4247856,24.184548 C45.2413997,25.1577475 44.8981607,25.9876239 44.3980367,26.6710018 C44.3713239,26.6710018 44.3513952,26.6843391 44.3380388,26.7110137 C44.3246824,26.7376883 44.3047538,26.7643629 44.2780409,26.7908258 C43.6979903,27.5275529 42.968051,28.140857 42.0880108,28.6273509 C41.2045785,29.1140565 40.1479367,29.3573035 38.9079091,29.3573035 C37.8811602,29.3573035 36.9211935,29.1472939 36.0244048,28.7240993 C35.1278281,28.3040801 34.3677838,27.7508997 33.7345195,27.0641346 L33.7345195,29.1574557 L29.7076626,29.1574557 L29.7076626,0 L4.0001228,0 C1.79005808,0 0,1.78983819 0,3.99964468 L0,32.9971163 C0,35.2068741 1.79005808,36.9966127 4.0001228,36.9966127 L49.4516425,36.9966127 L49.4516425,9.13918397 L53.4782873,9.13918397 L53.4782873,11.2323145 C54.1117636,10.5490425 54.8718079,9.98910873 55.7683846,9.55581583 C56.6617812,9.12252293 57.62514,8.90586589 58.6518889,8.90586589 C59.8885244,8.90586589 60.9485584,9.14917636 61.8319906,9.63579729 C62.7120308,10.1224182 63.4453623,10.7490385 64.0220207,11.5122919 C64.0487336,11.5389665 64.0686622,11.56562 64.0820186,11.5922946 C64.0953751,11.618948 64.1153037,11.6322853 64.1420165,11.6322853 C64.6421405,12.3155573 64.9853795,13.1454761 65.1687654,14.1187392 C65.3521513,15.091981 65.4454343,16.7784932 65.4454343,19.1716072 C65.4454343,21.5647211 65.3521513,23.2045739 65.1687654,24.1644362 C64.9853795,25.1245101 64.6421405,25.9609493 64.1420165,26.6710018 C64.1153037,26.6710018 64.0953751,26.6843391 64.0820186,26.7110137 C64.0686622,26.7376883 64.0487336,26.7643629 64.0220207,26.7908258 C63.4419701,27.5275529 62.7120308,28.140857 61.8319906,28.6273509 C60.9485584,29.1140565 59.8919165,29.3573035 58.6518889,29.3573035 C57.62514,29.3573035 56.6984584,29.1472939 55.8684518,28.7240993 C55.0384452,28.3040801 54.2417237,27.7375624 53.4782873,27.02751 L53.4782873,37 L101.999856,37 C104.210027,37 106,35.2102613 106,33.0002918 L106,3.99964468 C106,1.78983819 104.210027,0 101.999856,0 L102.003248,0 Z M25.5608099,20.668137 L13.0837443,20.668137 C13.0837443,22.3012365 13.5370996,23.5312319 14.4471387,24.3577212 C15.3538281,25.1878093 16.4938522,25.6010539 17.8639036,25.6010539 C18.0205767,25.6010539 18.1805782,25.5942794 18.3372512,25.5809421 C18.4939242,25.5676048 18.6539257,25.5477047 18.8105987,25.5210301 C19.4172986,25.417719 20.0206487,25.2043222 20.6273273,24.8878259 C21.2339635,24.571118 21.7739448,24.1644362 22.2473559,23.6646049 L25.1707175,26.1510588 C24.1973943,27.2843059 23.0841467,28.0974578 21.8339427,28.5975008 C20.5839931,29.097332 19.287296,29.3473534 17.943915,29.3473534 C17.6805602,29.3473534 17.4238836,29.3407906 17.1738852,29.3274533 C16.9238656,29.314116 16.6672102,29.2940042 16.4038553,29.2673296 C14.5604563,29.0306455 12.8770801,28.1942062 11.3503556,26.7609757 C9.82365236,25.3277451 9.06030073,22.8080539 9.06030073,19.2016055 C9.06030073,15.595263 9.79030369,13.2221339 11.250352,11.6822896 C12.7104003,10.1424242 14.3237932,9.24249512 16.0871808,8.97919988 C16.2971947,8.95252528 16.5005304,8.9325405 16.7005376,8.9192032 C16.8972163,8.90586589 17.100552,8.89919724 17.3138944,8.89919724 C19.5239592,8.89919724 21.4540265,9.66247189 23.0975031,11.189 C24.7407677,12.7155281 25.5642021,14.7686679 25.5642021,17.3484405 L25.5642021,20.6648132 L25.5608099,20.668137 Z M96.4531225,23.9044646 C96.1230279,24.957688 95.5898309,25.9044246 94.8531073,26.7476384 C94.8263944,26.774313 94.7996816,26.8009876 94.7729687,26.8276622 C94.719755,26.8810114 94.6731135,26.9341489 94.6330443,26.9843225 C94.592975,27.0376717 94.5463335,27.0908092 94.4962999,27.1409829 C93.9162493,27.6941633 93.1595971,28.200769 92.2263432,28.6608 C91.2928774,29.1206193 90.1128476,29.3507407 88.6928262,29.3507407 C87.2728047,29.3507407 86.092775,29.1206193 85.1593091,28.6608 C84.2260552,28.200769 83.469403,27.6941633 82.8893525,27.1409829 C82.8359267,27.0876337 82.7892853,27.0376717 82.7526081,26.9843225 C82.7127508,26.9309733 82.6658973,26.8810114 82.6126836,26.8276622 C82.5859708,26.8009876 82.5592579,26.774313 82.532545,26.7476384 C81.7960335,25.9044246 81.2626244,24.957688 80.9325298,23.9044646 C80.6026473,22.8512413 80.4391901,21.2581749 80.4391901,19.1282715 C80.4391901,16.998474 80.6026473,15.4119492 80.9325298,14.372042 C81.2626244,13.3321348 81.7960335,12.392215 82.532545,11.5489589 C82.5592579,11.5223055 82.5859708,11.4956309 82.6126836,11.4689775 C82.6658973,11.4156494 82.7127508,11.3656452 82.7526081,11.3123171 C82.7926774,11.2589891 82.8359267,11.2089848 82.8893525,11.1556568 C83.469403,10.6023705 84.2260552,10.0890961 85.1593091,9.61581251 C86.092775,9.14250771 87.2728047,8.90586589 88.6928262,8.90586589 C90.1128476,8.90586589 91.2928774,9.14250771 92.2263432,9.61581251 C93.1595971,10.0890961 93.9162493,10.6023705 94.4962999,11.1556568 C94.5497256,11.2089848 94.5963671,11.2623128 94.6330443,11.3123171 C94.6731135,11.3656452 94.719755,11.4189732 94.7729687,11.4689775 C94.7996816,11.4956309 94.8263944,11.5223055 94.8531073,11.5489589 C95.5898309,12.392215 96.1230279,13.3321348 96.4531225,14.372042 C96.7830051,15.4119492 96.9464623,16.998474 96.9464623,19.1282715 C96.9464623,21.2581749 96.7830051,22.8512413 96.4531225,23.9044646 Z" id="Shape" fillRule="nonzero"></path>
            <path d="M56.9783102,25 C58.8630766,25 60.0020568,24.3889347 60.4020888,23.1704802 C60.8019072,21.9518214 61,20.6044754 61,19.131812 L61,19.0160527 C61,17.5176559 60.8085317,16.1414518 60.4221759,14.8842339 C60.0358202,13.6269955 58.8900019,13 56.9783102,13 C55.2813794,13 54.2062932,13.5337427 53.7560435,14.601269 C53.3057937,15.6687952 53.0538505,16.8359872 53,18.1060923 L53,20.0096262 C53.0538505,21.253957 53.3124182,22.3954156 53.7761306,23.4372085 C54.2398429,24.4790014 55.3083046,25 56.9815156,25 L56.9783102,25 Z" id="Path"></path>
        </g>
    </g>

      {!isNormalised && (
        <>
          <rect x="200" y="34" width="40" height="40" rx="20" fill="white" fillOpacity="0.2" />
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M217.472 44.4655C218.581 42.5115 221.42 42.5115 222.528 44.4655L230.623 58.7184C231.711 60.6351 230.314 63 228.096 63H211.905C209.686 63 208.289 60.6351 209.377 58.7184L217.472 44.4655ZM221.451 58.6911C221.451 59.0722 221.298 59.4376 221.026 59.7071C220.754 59.9765 220.385 60.1279 220 60.1279C219.615 60.1279 219.246 59.9765 218.974 59.7071C218.702 59.4376 218.549 59.0722 218.549 58.6911C218.549 58.31 218.702 57.9446 218.974 57.6751C219.246 57.4057 219.615 57.2543 220 57.2543C220.385 57.2543 220.754 57.4057 221.026 57.6751C221.298 57.9446 221.451 58.31 221.451 58.6911V58.6911ZM220 47.1968C219.615 47.1968 219.246 47.3482 218.974 47.6177C218.702 47.8871 218.549 48.2526 218.549 48.6336V52.944C218.549 53.325 218.702 53.6905 218.974 53.9599C219.246 54.2294 219.615 54.3807 220 54.3807C220.385 54.3807 220.754 54.2294 221.026 53.9599C221.298 53.6905 221.451 53.325 221.451 52.944V48.6336C221.451 48.2526 221.298 47.8871 221.026 47.6177C220.754 47.3482 220.385 47.1968 220 47.1968Z"
            fill="white"
          />
          <path
            opacity="0.6"
            d="M36.791 196V183.947H34.411V196H36.791ZM41.6133 191.189C41.6133 190.22 42.1913 189.455 43.1773 189.455C44.2653 189.455 44.7243 190.186 44.7243 191.121V196H46.9853V190.73C46.9853 188.894 46.0333 187.415 43.9593 187.415C43.0583 187.415 42.0553 187.806 41.5453 188.673V187.636H39.3523V196H41.6133V191.189ZM56.9874 187.636H54.6074L52.6184 193.246L50.5444 187.636H48.0624L51.4794 196H53.7404L56.9874 187.636ZM57.6689 193.722C57.6689 195.031 58.7569 196.238 60.5419 196.238C61.7829 196.238 62.5819 195.66 63.0069 194.997C63.0069 195.32 63.0409 195.779 63.0919 196H65.1659C65.1149 195.711 65.0639 195.116 65.0639 194.674V190.56C65.0639 188.877 64.0779 187.381 61.4259 187.381C59.1819 187.381 57.9749 188.826 57.8389 190.135L59.8449 190.56C59.9129 189.829 60.4569 189.2 61.4429 189.2C62.3949 189.2 62.8539 189.693 62.8539 190.288C62.8539 190.577 62.7009 190.815 62.2249 190.883L60.1679 191.189C58.7739 191.393 57.6689 192.226 57.6689 193.722ZM61.0179 194.555C60.2869 194.555 59.9299 194.079 59.9299 193.586C59.9299 192.94 60.3889 192.617 60.9669 192.532L62.8539 192.243V192.617C62.8539 194.096 61.9699 194.555 61.0179 194.555ZM69.5703 196V183.692H67.3093V196H69.5703ZM74.1358 196V187.636H71.8748V196H74.1358ZM71.6028 184.899C71.6028 185.647 72.2318 186.276 72.9968 186.276C73.7788 186.276 74.3908 185.647 74.3908 184.899C74.3908 184.117 73.7788 183.488 72.9968 183.488C72.2318 183.488 71.6028 184.117 71.6028 184.899ZM84.5322 183.692H82.3052V188.469C82.0672 188.027 81.3872 187.432 79.9422 187.432C77.5792 187.432 75.9302 189.353 75.9302 191.801C75.9302 194.334 77.6302 196.204 80.0102 196.204C81.1322 196.204 81.9822 195.694 82.3562 195.031C82.3562 195.422 82.4072 195.83 82.4412 196H84.6002C84.5662 195.66 84.5322 195.048 84.5322 194.487V183.692ZM78.2082 191.801C78.2082 190.305 79.1262 189.455 80.2822 189.455C81.4382 189.455 82.3392 190.288 82.3392 191.784C82.3392 193.297 81.4382 194.181 80.2822 194.181C79.0922 194.181 78.2082 193.297 78.2082 191.801ZM93.1445 191.189C93.1445 190.22 93.7225 189.455 94.7085 189.455C95.7965 189.455 96.2555 190.186 96.2555 191.121V196H98.5165V190.73C98.5165 188.894 97.5645 187.415 95.4905 187.415C94.5895 187.415 93.5865 187.806 93.0765 188.673V187.636H90.8835V196H93.1445V191.189ZM100.252 193.722C100.252 195.031 101.34 196.238 103.125 196.238C104.366 196.238 105.165 195.66 105.59 194.997C105.59 195.32 105.624 195.779 105.675 196H107.749C107.698 195.711 107.647 195.116 107.647 194.674V190.56C107.647 188.877 106.661 187.381 104.009 187.381C101.765 187.381 100.558 188.826 100.422 190.135L102.428 190.56C102.496 189.829 103.04 189.2 104.026 189.2C104.978 189.2 105.437 189.693 105.437 190.288C105.437 190.577 105.284 190.815 104.808 190.883L102.751 191.189C101.357 191.393 100.252 192.226 100.252 193.722ZM103.601 194.555C102.87 194.555 102.513 194.079 102.513 193.586C102.513 192.94 102.972 192.617 103.55 192.532L105.437 192.243V192.617C105.437 194.096 104.553 194.555 103.601 194.555ZM112.153 196V191.104C112.153 190.186 112.731 189.455 113.717 189.455C114.737 189.455 115.196 190.135 115.196 191.036V196H117.44V191.104C117.44 190.203 118.018 189.455 118.987 189.455C120.024 189.455 120.466 190.135 120.466 191.036V196H122.659V190.577C122.659 188.333 121.18 187.398 119.633 187.398C118.528 187.398 117.644 187.772 116.981 188.792C116.556 187.891 115.638 187.398 114.499 187.398C113.581 187.398 112.51 187.84 112.051 188.656V187.636H109.892V196H112.153ZM126.669 190.866C126.72 190.101 127.366 189.217 128.539 189.217C129.831 189.217 130.375 190.033 130.409 190.866H126.669ZM130.63 193.042C130.358 193.79 129.78 194.317 128.726 194.317C127.604 194.317 126.669 193.518 126.618 192.413H132.602C132.602 192.379 132.636 192.039 132.636 191.716C132.636 189.03 131.089 187.381 128.505 187.381C126.363 187.381 124.391 189.115 124.391 191.784C124.391 194.606 126.414 196.255 128.709 196.255C130.766 196.255 132.092 195.048 132.517 193.603L130.63 193.042Z"
            fill="white"
          />
        </>
      )}
      {subdomainText}
      <Text
        x="32.5"
        y="231"
        style={{ fontSize: `${domainFontSize}px` }}
        opacity={isSubdomain ? 0.4 : 1}
        fill="white"
        filter="url(#dropShadow)"
      >
        {domain}
      </Text>
      <defs>
        <linearGradient
          id="paint0_linear"
          x1="190.5"
          y1="302"
          x2="-64"
          y2="-172.5"
          gradientUnits="userSpaceOnUse"
        >
          <stop stopColor="#FA4B7F" />
          <stop offset="0.428185" stopColor="#628BF3" />
          <stop offset="1" stopColor="#F3935D" />
        </linearGradient>
        <linearGradient
          id="paint1_linear"
          x1="0"
          y1="0"
          x2="269.553"
          y2="285.527"
          gradientUnits="userSpaceOnUse"
        >
          <stop stopColor="#EB9E9E" />
          <stop offset="1" stopColor="#992222" />
        </linearGradient>
      </defs>
    </svg>
  )
}

export default NFTTemplate
